# Fields are extract from grib file according to expected shortName, typeOfLevel, level. 

# List of 'shortName' fields to plot --> if not available, create the necessary attributes for the variable below
# Special cases where variable is differted from expected grib shortName
# For plotting 10m wind speed     -> '10mw',  
# For plotting 10m wind direction -> '10mwd' 
# For plotting wind speed at a given level  -> 'u' or 'v'  
# For plotting wind direction at a given level  -> 'ud' or 'vd'
# For plotting wind gust speed  -> 'wgst'

shortNameList: ['2t','t'] #'10mw','u','tirf'] #,'prmsl'

# In case of accumulated fields, given the forecast time T, we calculate 'T - T_int_accum_hour' 
int_accum_hour: 3

# Custom lat/lon domain 
# [lat_bottom_left, lon_bottom_left, lat_top_right, lon_top_right]
#DK
#lat_lon_map_area: [52,3,58,17]  #[52,3,60,17] 
#PT
lat_lon_map_area: [35,-16,43,-2]

# increment to diplay lat/lon grid on map
lat_inc: 2
lon_inc: 2

##################################################
# Attributes for every variables in shortNameList
# Variables are identified by the expected shortName used in the gribfile
##################################################

####################
# typeOfLevel = surface
####################

# Time integral of rain flux (alternative when we cannot extract rprate from grib)
tirf:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'surface'
  # expected level
  level: '0'
  # if accumulated field
  accumulated: True
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "cyan"
  contour_shade_max_level_colour: "purple"
  countList: [] #[1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,20] #[1,2,4,6,8,10,12,14,16,18,20]  #,22,24,26,28,30,32,36]  #,40] #,46,50,54,60,66,74]

# Rain precipitation rate
rprate:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'surface'
  # expected level
  level: '0'
  # if accumulated field
  accumulated: True
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "cyan"
  contour_shade_max_level_colour: "purple"
  countList: [] 

# Snow precipitation rate
sprate:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'surface'
  # expected level
  level: '0'
  # if accumulated field
  accumulated: True
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "cyan"
  contour_shade_max_level_colour: "purple"
  countList: [] 

# Surface pressure
sp:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'surface'
  # expected level
  level: '0'
  # if accumulated field
  accumulated: False
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "blue"
  contour_shade_max_level_colour: "red"
  countList: [] 

####################
# typeOfLevel = meanSea
####################

# Pressure reduced to MSL
prmsl:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'meanSea'
  # expected level
  level: '0'
  # if accumulated field
  accumulated: False
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "blue"
  contour_shade_max_level_colour: "red"
  countList: [] 

####################
# typeOfLevel = heightAboveGround
####################

# 2m temeprature
2t:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'heightAboveGround'
  # expected level
  level: '2'
  # if accumulated field
  accumulated: False
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "blue"
  contour_shade_max_level_colour: "red"
  countList: []   

# 10m wind speed
10mw:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'heightAboveGround'
  # expected level
  level: '10'
  # if accumulated field
  accumulated: False
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "blue_green"    
  contour_shade_max_level_colour: "magenta"
  countList: [] #[0,1,2,3,4,5,6,7,8,9,10,12,14,16]

# 10m wind direction
10mwd:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'heightAboveGround'
  # expected level
  level: '10'
  # if accumulated field
  accumulated: False
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "blue"    
  contour_shade_max_level_colour: "red"
  countList: [] #[0,1,2,3,4,5,6,7,8,9,10,12,14,16]

# 10m wind gust speed
wgst:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'heightAboveGround'
  # expected level
  level: '10'
  # if accumulated field
  accumulated: False
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "blue_green"
  contour_shade_max_level_colour: "magenta"
  countList: [2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50]


# 2m relative humidity
2r:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'heightAboveGround'
  # expected level
  level: '2'
  # if accumulated field
  accumulated: False
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "blue"
  contour_shade_max_level_colour: "red"
  countList: []   
  
####################
# typeOfLevel =  isobaricInhPa
####################

t:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'isobaricInhPa'
  # expected level
  level: '850'
  # if accumulated field
  accumulated: False
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "blue"
  contour_shade_max_level_colour: "red"
  countList: []

# Specify 'u' or 'v' to calculate wind speed at a given level
u:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'isobaricInhPa'
  # expected level
  level: '850'
  # if accumulated field
  accumulated: False
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "blue_green"    
  contour_shade_max_level_colour: "magenta"
  countList: [] #[0,1,2,3,4,5,6,7,8,9,10,12,14,16,18,20,22]

# Specify 'ud' or 'vd' to calculate wind direction at a given level
ud:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'isobaricInhPa'
  # expected level
  level: '850'
  # if accumulated field
  accumulated: False
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "blue"    
  contour_shade_max_level_colour: "red"
  countList: [] #[0,1,2,3,4,5,6,7,8,9,10,12,14,16,18,20,22]

z:
  # expected typeOfLevel as in grib file
  typeOfLevel: 'isobaricInhPa'
  # expected level
  level: '850'
  # if accumulated field
  accumulated: False
  # Option for customizing the plot (colorbar and coutour)
  # leave list empty 'countList: []' to plot using min/max of the variable 
  contour_shade_min_level_colour: "cyan"
  contour_shade_max_level_colour: "magenta"
  countList: []

